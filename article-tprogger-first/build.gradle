plugins {
    id 'idea'
    id 'com.github.ben-manes.versions' version "$benManesPluginVersion"
    id 'org.jetbrains.kotlin.jvm' version "$kotlinVersion"
    id "io.qameta.allure" version "$allurePluginVersion"
}

allprojects { repositories { mavenLocal(); mavenCentral() } }

wrapper { distributionType = Wrapper.DistributionType.ALL; gradleVersion = gradleWrapperVersion }

test {
    useJUnitPlatform()
    systemProperties << ['wiremock.version': wiremockVersion]
}

dependencies {
    /* Kotlin */
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

    /* Logging API and Impl*/
    implementation "org.slf4j:slf4j-api:$slf4jVersion"
    runtimeOnly "org.slf4j:slf4j-simple:$slf4jVersion"

    /* Retrofit Lib and Http Client Implementation */
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "io.qameta.allure:allure-okhttp3:$allureVersion"

    /* Retrofit Convertors and Interceptors*/
    implementation "com.squareup.retrofit2:converter-jackson:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"

    /* Kotest */
    testImplementation "io.kotest:kotest-extensions-allure:$kotestVersion"
    testImplementation "io.kotest:kotest-runner-junit5:$kotestVersion"
    testImplementation "io.kotest:kotest-assertions-core:$kotestVersion"
    testImplementation "io.kotest:kotest-property:$kotestVersion"

    /* Kotest Extensions */
    testImplementation "io.kotest:kotest-extensions-testcontainers:$kotestVersion"
    testImplementation "io.kotest:kotest-extensions-allure:$kotestVersion"

    /* Main Testcontainers lib */
    testImplementation "org.testcontainers:testcontainers:$testContainers"

    /* Wiremock Client */
    testImplementation "com.github.tomakehurst:wiremock:$wiremockVersion"
}

// noinspection GroovyAssignabilityCheck
tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
    kotlinOptions.jvmTarget = JavaVersion.VERSION_11
}

allure {
    version = allureVersion
    aspectjVersion = aspectVersion
    autoconfigure = false
    aspectjweaver = true
    resultsDir = file "$rootDir/allure-results"
}