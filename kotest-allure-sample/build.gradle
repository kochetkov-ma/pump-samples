plugins {
    /** Kotlin Spring plugin */
    id 'org.jetbrains.kotlin.plugin.spring' version "$kotlinVersion"
    /** Allure report generator plugin */
    id "io.qameta.allure" version "$allurePluginVersion"
}

dependencies {
    /** Kotlin */
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

    /** IoPump Allure Report Listener */
    testImplementation "ru.iopump.kotest:kotest-allure:$kotestAllureVersion"

    /** Kotest */
    testImplementation "io.kotest:kotest-runner-junit5-jvm:$kotestVersion"
    testImplementation "io.kotest:kotest-assertions-core-jvm:$kotestVersion"
    testImplementation "io.kotest:kotest-property-jvm:$kotestVersion"
    testImplementation "io.kotest.extensions:kotest-extensions-spring:1.1.2"

    /** Spring */
    testImplementation "org.springframework:spring-core:$springVersion"
    testImplementation "org.springframework:spring-context:$springVersion"
    testImplementation "org.springframework:spring-test:$springVersion"

    /** Logger implementation */
    testImplementation "org.slf4j:slf4j-simple:$slf4jVersion"
}

/** Minimal Allure extension configuration for Kotest and out listener */
allure {
    adapter {
        allureJavaVersion = allureVersion
        aspectjVersion = "1.9.9.1"
        autoconfigure = false
        aspectjweaver = true

        frameworks { junit5 { enabled = false } }
        frameworks { junit4 { enabled = false } }
    }
}