plugins {
    /** Kotlin jvm plugin */
    id 'org.jetbrains.kotlin.jvm' version "$kotlinVersion"
    /** Kotlin Spring plugin */
    id 'org.jetbrains.kotlin.plugin.spring' version "$kotlinVersion"
    /** Allure report generator plugin */
    id "io.qameta.allure" version "$allurePluginVersion"
}
/** According to Kotest documentation. Use Junit5 */
test { useJUnitPlatform() }

dependencies {
    /** Kotlin */
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

    /** IoPump Allure Report Listener */
    testImplementation "ru.iopump.kotest:kotest-allure:$kotestAllureVersion"

    /** Kotest */
    testImplementation "io.kotest:kotest-runner-junit5-jvm:$kotestVersion"
    testImplementation "io.kotest:kotest-assertions-core-jvm:$kotestVersion"
    testImplementation "io.kotest:kotest-property-jvm:$kotestVersion"
    testImplementation "io.kotest:kotest-extensions-spring:$kotestVersion"

    /** Spring */
    testImplementation "org.springframework:spring-core:$springVersion"
    testImplementation "org.springframework:spring-context:$springVersion"
    testImplementation "org.springframework:spring-test:$springVersion"

    /** Logger implementation */
    testImplementation "org.slf4j:slf4j-simple:$slf4jVersion"
}
/** According to Kotlin Documentation */
tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
    kotlinOptions.jvmTarget = JavaVersion.VERSION_11
}

/** Minimal Allure extension configuration for Kotest and out listener */
allure {
    version = allureVersion
    autoconfigure = false
    aspectjweaver = true
    aspectjVersion = aspectJVersion
    resultsDir = file "$buildDir/allure-results"
}