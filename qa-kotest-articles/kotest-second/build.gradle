dependencies {
    implementation "com.github.f4b6a3:uuid-creator:$uuidVersion"
}
// TAG //
task gradleBuildInFilterTest(type: Test) {
    group "test"
    useJUnitPlatform()
    doFirst { systemProperties = System.properties }
    filter { includeTestsMatching("ru.iopump.qa.sample.tag.*") }
}

task regressOnlyTest(type: Test) {
    group "test"
    useJUnitPlatform()
    doFirst { systemProperties = System.properties + ["kotest.tags": "regress"] }
}

task linuxWithRegressOnlyTest(type: Test) {
    group "test"
    useJUnitPlatform()
    doFirst { systemProperties = System.properties + ["kotest.tags": "Linux & regress"] }
}

task linuxAllTest(type: Test) {
    group "test"
    useJUnitPlatform()
    doFirst { systemProperties = System.properties + ["kotest.tags": "Linux"] }
}

task noTest(type: Test) {
    group "test"
    useJUnitPlatform()
    doFirst { systemProperties = System.properties + ["kotest.tags": "!Linux & !Windows"] }
}

task linuxAndWindowsTest(type: Test) {
    group "test"
    useJUnitPlatform()
    doFirst { systemProperties = System.properties + ["kotest.tags": "Linux | Windows"] }
}

// ORDERING //
task specOrderingTest(type: Test) {
    group "test"
    useJUnitPlatform()
    filter { includeTestsMatching("ru.iopump.qa.sample.ordering.*") }
}

// PARALLELISM //
task parallelismTest(type: Test) {
    group "test"
    useJUnitPlatform()
    doFirst { systemProperties = System.properties + ["kotest.framework.parallelism": 3] }
    filter { includeTestsMatching("ru.iopump.qa.sample.parallelism.*") }
}

// WAIT //
task waitTest(type: Test) {
    group "test"
    useJUnitPlatform()
    filter { includeTestsMatching("ru.iopump.qa.sample.wait.*") }
}
// FACTORY //
task factoryTest(type: Test) {
    group "test"
    useJUnitPlatform()
    filter { includeTestsMatching("ru.iopump.qa.sample.factory.*") }
}
// PROPERTY //
task propertyTest(type: Test) {
    group "test"
    useJUnitPlatform()
    filter { includeTestsMatching("ru.iopump.qa.sample.property.*") }
}